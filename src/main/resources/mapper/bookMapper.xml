<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="book.dao.BookDAO">

	<!-- bookList 출력 -->
	<!-- <select id="getBookList" resultType="book.bean.BookDTO">
		select * from bookUpload order by seq desc limit #{startNum}, #{endNum}
	</select> -->
	<select id="getBookList" parameterType="map" resultType="book.bean.BookDTO">
	    SELECT *,
	           `like` AS like_count  <!-- like 컬럼에 별칭 부여 -->
	    FROM bookupload
	    WHERE 1=1
	    
	    <!-- 검색 조건에 따른 필터링 -->
	    <if test="searchType != null and searchTerm != null">
	      <choose>
	        <when test="searchType == 'title'">
	          AND subject LIKE CONCAT('%', #{searchTerm}, '%')
	        </when>
	        <when test="searchType == 'author'">
	          AND author LIKE CONCAT('%', #{searchTerm}, '%')
	        </when>
	        <when test="searchType == 'both'">
	          AND (subject LIKE CONCAT('%', #{searchTerm}, '%') 
	     		OR author LIKE CONCAT('%', #{searchTerm}, '%'))
	        </when>
	        <!-- 추가 검색 조건 필요시 여기에 추가 -->
	      </choose>
	    </if>
	    
	    <!-- 정렬 조건에 따른 정렬 -->
	    <if test="sortType != null">
	      <choose>
	        <when test="sortType == 'like'">
	          ORDER BY like_count DESC  <!-- 별칭으로 정렬 -->
	        </when>
	        <when test="sortType == 'rating'">
	          ORDER BY rating DESC
	        </when>
	      </choose>
	    </if>
	    
	    <!-- 기본 정렬 기준 (검색 조건이 없을 경우) -->
	    <if test="sortType == null">
	      ORDER BY seq DESC
	    </if>
	    
	    <!-- 페이지네이션 처리 -->
	    LIMIT #{startNum}, #{endNum}
	</select>
	
	<!-- getTotalA -->
	<select id="getTotalA" resultType="int">
		select count(*) from bookUpload
	</select>
	
	<!-- book upload -->
	<insert id="bookWrite" parameterType="book.bean.BookDTO">
	    insert into bookUpload (imageFileName, imageOriginalFileName, subject, author, content)
	    values (#{imageFileName}, #{imageOriginalFileName}, #{subject}, #{author}, #{content})
	</insert>
	
	<!-- book get DTO View-->
	<select id="getBookDTO" parameterType="String" resultType="book.bean.BookDTO">
		select * from bookUpload where seq=#{seq}
	</select>
	
	<!-- review -->
	
	<!-- review write -->
	<insert id="reviewform" parameterType="book.bean.ReviewDTO">
		insert into bookReview (id, grade, reviewcontent, ref) values (#{id}, #{grade}, #{reviewcontent}, #{ref})
	</insert>
	
	<!-- review list 불러오기 -->
	<select id="getReviewList" resultType="book.bean.ReviewDTO">
		select * from bookReview where ref=#{seq}
	</select>
	
	<!-- book rating get -->
	<select id="getPresentRating" parameterType="int" resultType="float">
		select ROUND(AVG(grade), 1)
	    from bookReview
	    where ref = #{nowSeq}
	</select>
	
	<!-- update rating -->
	<update id="updateRating" parameterType="java.util.Map" >
		update bookUpload set rating=#{nowRating} where seq=#{nowSeq}
	</update>
	
	<!-- update reply -->
	<update id="updateReply" parameterType="int" >
		update bookUpload set reply=reply+1 where seq=#{nowSeq}
	</update>
	
	<!-- update Like -->
	<update id="updateLike" parameterType="int" >
		update bookUpload set `like`=`like`+1 where seq=#{like_seq}
	</update>
	
	<!-- book 삭제 -->
	<delete id="bookDelete" parameterType="int">
		delete from bookUpload where seq=#{seq}
	</delete>
	
	<!-- book get ImageFileName -->
	<select id="getImageFileName" parameterType="int" resultType="String">
		select imageFileName from bookUpload where seq=#{seq}
	</select>
	
	<!-- book update (NCP)-->
	<update id="updateBook" parameterType="book.bean.BookDTO">
		update bookUpload set imageFileName=#{imageFileName},
			 				  imageOriginalFileName=#{imageOriginalFileName},
			 				  subject=#{subject},
			 				  author=#{author},
			 				  content=#{content}
		where seq=#{seq}
	</update>
	
</mapper>